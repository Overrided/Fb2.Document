name: Fb2.Document CI

on:
  pull_request:
  push:
    paths-ignore:
      - "**/**.md"

#jobs:
#  build:

#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest]
#        dotnet: ['5.0','6.0' ]

#    steps:
#      - uses: actions/checkout@v2
#      - name: Install .NET ${{ matrix.dotnet }}
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: ${{ matrix.dotnet }}
#          include-prerelease: true
#      - name: Build library on ${{ matrix.os }}
#        run: dotnet build -c release -f ${{ matrix.dotnet }}
#      - name: Run tests
#        run: dotnet test

# works - side by side build methodology
#jobs:
#  build:

#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest]

#    steps:
#      - uses: actions/checkout@v2
#      - name: Install .NET 5.0
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '5.0.x'
#      - name: Install .NET 6.0
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '6.0.x'
#          include-prerelease: true
#      - name: Build library
#        run: dotnet build -c release
#      - name: Run tests
#        run: dotnet test

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '3.0', '3.1.x', '5.0.x' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      # You can test your matrix by printing the current dotnet version
      - name: Display dotnet version
        run: dotnet --version

      - name: Build library
        run: dotnet build -c release

      - name: Run tests
        run: dotnet test